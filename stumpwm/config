;; vim: set ft=lisp:

(in-package :stumpwm)

(set-prefix-key (kbd "F9")) ; "C-t" is the default value.

(setf *message-window-gravity* :center)
(setf *input-window-gravity* :center)
(setf *window-border-style* :thin)

(setf *mouse-focus-policy* :sloppy) ; :ignore :sloppy :click

;;;
;;; Modules.
;;;
; @see https://stumpwm.github.io/git/stumpwm-git_15.html#Modules
; briefly: invoke 'make install-modules' from StumpWMâ€™s root source directory.
;          Yes, you should install StumpWM from sources to make this work.

;;;
;;; Fonts.
;;;
(load-module "ttf-fonts")
(xft:cache-fonts)
(set-font (make-instance 'xft:font :family "DejaVu Sans Mono" :subfamily "Book" :size 13))

;;;
;;; Top-map keys.
;;;

;; Define the volume control and mute keys.
(define-key *top-map* (kbd "XF86AudioLowerVolume") "exec pactl set-sink-volume 0 -5%")
(define-key *top-map* (kbd "XF86AudioRaiseVolume") "exec pactl set-sink-volume 0 +5%")
(define-key *top-map* (kbd "XF86AudioMute") "exec pactl set-sink-mute 0 toggle")


;;;
;;; Root-map keys.
;;;

;; Change frames.

(define-key *root-map* (kbd "Left") "move-focus left")
(define-key *root-map* (kbd "Right") "move-focus right")

;; Move windows.

(define-key *root-map* (kbd "M-Left") "move-window left")
(define-key *root-map* (kbd "M-Right") "move-window right")

;; Change groups.

(define-key *root-map* (kbd "C-Left") "gprev")
(define-key *root-map* (kbd "C-Right") "gnext")

;; Fix terminal-emulator
(define-key *root-map* (kbd "c") "exec x-terminal-emulator")

;; Disable easy killing.
;; undefine-key doesn't work, so use this hack.
(define-key *root-map* (kbd "k") "exec true")
(define-key *root-map* (kbd "K") "kill")

;; Switch input languages.
;; (define-key *root-map* (kbd "C-l") "exec fcitx-remote -t")

;; Restore groups and frames.
(defun -restore-groups-and-frames ()
  (run-commands "gselect 1"
                "grename one")

  (restore-from-file "~/.config/stumpwm/desktop"))

;; Restore window placement rules.
(defun -restore-window-rules ()
  (restore-window-placement-rules "~/.config/stumpwm/window-placement"))

;; Restore
(-restore-groups-and-frames)
(-restore-window-rules)

;;
;; initializing
;;
(when *initializing*
  (run-commands "exec google-chrome --high-dpi-support --force-device-scale-factor=1.625"
                "exec google-chrome-beta --high-dpi-support --force-device-scale-factor=1.4"
                "exec x-terminal-emulator"
                "exec Telegram"))

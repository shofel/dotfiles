#| --------------------------------------------------------------------------

    @see https://github.com/kmonad/kmonad/blob/master/keymap/tutorial.kbd

  -------------------------------------------------------------------------- |#

(defcfg
  input  (device-file "/dev/input/by-id/usb-13ba_Barcode_Reader-event-kbd")
  output (uinput-sink "My KMonad output"
    ;; Prepare support for compose-key
    "sleep 1 && setxkbmap -option compose:menu")
  cmp-seq menu    ;; Set the compose key to menu
  cmp-seq-delay 5 ;; 5ms delay between each compose-key sequence press

  ;; TODO Comment this is you want unhandled events not to be emitted
  fallthrough true

  ;; Set this to false to disable any command-execution in KMonad
  allow-cmd true
)

#| -------------------------------------------------------------------------
                            The original layout

   Keyboard is to be prepared like this:
   1. Reset memory: `Program+Control+F10`
   2. (Optionally) Switch to Dvorak: `Program+Control+F5`
   3. Swap Escape and CapsLock: `Program+F12 Esc CapsLock CapsLock Esc Program+F12`

   Kinesis cheatsheet: http://web.mit.edu/jmorzins/Public/kinesisCheatSheet.html
   ------------------------------------------------------------------------- |#

#| src:qwerty | #
(defsrc
  caps F1   F2   F3   F4   F5   F6   F7   F8   F9    F10  F11  F12  prnt slck pause

  =    1    2    3    4    5                    6    7    8    9    0    -
  tab  q    w    e    r    t                    y    u    i    o    p    \
  esc  a    s    d    f    g                    h    j    k    l    ;    '
  lsft z    x    c    v    b                    n    m    ,    .    / rsft
       grv  ins  left rght                           up   down [    ]

                           lctl lalt    ralt rctl
                      bspc del  home    pgup ret  spc
                                 end    pgdn
)
|#

#| src:dvorak |#
(defsrc
  caps F1   F2   F3   F4   F5   F6   F7   F8   F9    F10  F11  F12  prnt slck pause

  =    1    2    3    4    5                    6    7    8    9    0    -
  tab  '    ,    .    p    y                    f    g    c    r    l    /
  esc  a    o    e    u    i                    d    h    t    n    s    \
  lsft ;    q    j    k    x                    b    m    w    v    z rsft
       grv  ins  left rght                           up   down [    ]

                           lctl lalt    ralt rctl
                      bspc del  home    pgup ret  spc
                                 end    pgdn
)
#||#

#| --------------------------------------------------------------------------
                       Templates for custom layers
  -------------------------------------------------------------------------- |# #|

(deflayer template-_
  _    _    _    _    _    _    _    _    _    _     _    _    _    _    _    _

  _    _    _    _    _    _                    _    _    _    _    _    _
  _    _    _    _    _    _                    _    _    _    _    _    _
  _    _    _    _    _    _                    _    _    _    _    _    _
  _    _    _    _    _    _                    _    _    _    _    _    _
       _    _    _    _                              _    _    _    _

                           _    _       _    _
                      _    _    _       _    _    _
                                _       _
)

(deflayer template-XX
  XX   XX   XX   XX   XX   XX   XX   XX   XX   XX    XX   XX   XX   XX   XX   XX

  XX   XX   XX   XX   XX   XX                   XX   XX   XX   XX   XX   XX
  XX   XX   XX   XX   XX   XX                   XX   XX   XX   XX   XX   XX
  XX   XX   XX   XX   XX   XX                   XX   XX   XX   XX   XX   XX
  XX   XX   XX   XX   XX   XX                   XX   XX   XX   XX   XX   XX
       XX   XX   XX   XX                             XX   XX   XX   XX

                           XX   XX      XX   XX
                      XX   XX   XX      XX   XX   XX
                                XX      XX  
)

|#

#| --------------------------------------------------------------------------
                                   Layers
  -------------------------------------------------------------------------- |#

(deflayer base
  XX   XX   XX   XX   XX   XX   XX   XX   XX   XX    XX   XX   XX   XX  @qwe_ @sus

 @scr  !    @    #    $    %                    ^    &    *    @k1  @k2  XX   
  XX   '    ,    .    p    y                    f    g    c    r    l    /
  XX   a    o    e    u    i                    d    h    t    n    s    -
 @lsft ;    q    j    k    x                    b    m    w    v    z   @rsft
       XX   XX  @nav @sym                           @sym @nav  XX   XX

                          lctl  XX      XX   rctl
                     @num  @wm  XX      XX   ret  spc
                                XX      XX
)

#| what about ctrl+k, ctrl+v |#
(deflayer symbols
  #| Hint to type cyrillics:  `ё =ъ ~Ё +Ъ  |#
  _    _    _    _    _    _    _    _    _    _     _    _    _    _    _    _

  _    F1   F2   F3   F4   F5                   F6   F7   F8   F9   F10  _ 
  _    _    `    =    |    \                    /    XX   +    ~    _    _ 
  _    _    <   \(    {    [                    ]    }   \)    >    _    _ 
  _    _    lalt lsft lctl _                    _    rctl rsft ralt _    _ 
       _    _    _    _                              _    _    _    _

                           _    _       _    _
                     @sym  _    _       _    _    spc
                                _       _   
)


(deflayer numbers
  _    _    _    _    _    _    _    _    _    _     _    _    _    _    _    _

  _    _    _    _    _    _                    _    _    _    _    _    _
  _    _    _    _    _    _                    /    7    8    9    del  :
  _    _    _    _    tab  _                    bspc 4    5    6    .    _
  _    _    lalt lsft lctl _                    0    1    2    3    0    spc
       _    _    XX   XX                             up   down _    _

                           _    _       _    _
                      XX   _    _       _    _   esc
                                _       _
)


(deflayer navigation
  _    _    _    _    _    _    _    _    _    _     _    _    _    _    _    _

  _    _    _    _    _    _                    _    _    _    _    _    _
  _    _    _    _    _    _                    _    pgup @↑   pgdn _    _
  _    _    _    _    tab  _                    home @←   @↓   @→   end  _
  _    _    lalt lsft lctl _                    _    rctl rsft ralt _    _ 
       _    _    XX   XX                             up   down _    _

                           _    _       _    _
                     @nav  _    _       _    _    XX 
                                _       _
)


(deflayer qwerty
  caps F1   F2   F3   F4   F5   F6   F7   F8   F9    F10  F11  F12  prnt @base_ pause

  =    1    2    3    4    5                    6    7    8    9    0    -
  tab  q    w    e    r    t                    y    u    i    o    p    \
  esc  a    s    d    f    g                    h    j    k    l    ;    '
  lsft z    x    c    v    b                    n    m    ,    .    / rsft
       grv  ins  left rght                           up   down [    ]

                           lctl lalt    ralt rctl
                      bspc  del home    pgup ret  spc
                                 end    pgdn
)


#| --------------------------------------------------------------------------
                               Alias
  -------------------------------------------------------------------------- |#

(defalias

  ;; Switch Layers
  ;; see also (layer-delay n x) (layer-next x)
  base_ (layer-switch base)
  qwe_  (layer-switch qwerty)

  #| -----------------------------------------------------
     Sticky key enables "fixation" of the layer.
     That is:
     - toggle layer with one key
     - then press another key to toggle the same layer
     - then release the first one
     -> when sticky, then we're still on the layer
     -> but without stickiness, layer switches back,
        dispite of the second toggle is still pressed
    ----------------------------------------------------- |#
  sym   (sticky-key 0 (layer-toggle symbols))
  num   (sticky-key 0 (layer-toggle numbers))
  nav   (sticky-key 0 (layer-toggle navigation))

  ;; Fancy names for arrows
     ↑ up  ↓ down  ← left  → rght

  ;; ld1 (layer-delay 500 base) ;; One way to get a leader-key
  ;; ld2 (layer-next base)      ;; (around-next (layer-toggle layer-name) some-button)

  wm F10 ;; Prefix-key for stumpwm
  k1 A-M-F1
  k2 A-M-F2
  lsft (sticky-key 500 lsft)
  rsft (sticky-key 500 rsft)
)

#| --------------------------------------------------------------------------
                        Optional: Compose-key sequences

  Compose-key sequences are series of button-presses that your operating system
  will interpret as the insertion of a special character, like accented
  characters, or various special-languages. In that sense, they are just
  syntactic sugar for keyboard macros.

  To get this to work on Linux you will need to set your compose-key with a tool
  like `setxkbmap', as well as tell kmonad that information. See the `defcfg'
  block at the top of this file for a working example. Note that you need to
  wait ever so slightly for the keyboard to register with linux before the
  command gets executed, that's why the `sleep 1`. Also, note that all the
  `/run/current-system' stuff is because the author uses NixOS. Just find a
  shell-command that will:

    1. Sleep a moment
    2. Set the compose-key to your desired key

  Please be aware that what `setxkbmap' calls the `menu' key is not actually the
  `menu' key! If you want to use the often suggested

      setxkbmap -option compose:menu

  you will have to set your compose key within kmonad to `compose' and not
  `menu'.

  After this, this should work out of the box under Linux. Windows does not
  recognize the same compose-key sequences, but WinCompose will make most of the
  sequences line up with KMonad: http://wincompose.info/
  This has not in any way been tested on Mac.

  In addition to hard-coded symbols, we also provide 'uncompleted' macros. Since
  a compose-key sequence is literally just a series of keystrokes, we can omit
  the last one, and enter the sequence for 'add an umlaut' and let the user then
  press some letter to add this umlaut to. These are created using the `+"`
  syntax.

  -------------------------------------------------------------------------- |#

#| --------------------------------------------------------------------------
                        Optional: Command buttons

  Currently we also provide the ability to launch arbitrary shell-commands from
  inside kmonad. These commands are simply handed off to the command-shell
  without any further checking or waiting.

  The `cmd-button' function takes two arguments, the second one of which is
  optional. These represent the commands to be executed on pressing and
  releasing the button respectively.

  BEWARE: never run anyone's configuration without looking at it. You wouldn't
  want to push:

    (cmd-button "rm -rf ~/*") ;; Delete all this user's data


  -------------------------------------------------------------------------- |#

(defalias
  scr (cmd-button "scrot --line style=solid,width=3 --select /home/shovel/screenshots/$(date +%Y-%m-%-d-%R-%S).png")
  sus (cmd-button "exec systemctl suspend")

  ;; volume control and mute
  volu (cmd-button "pactl set-sink-volume 0 -5%")
  vold (cmd-button "pactl set-sink-volume 0 +5%")
  mute (cmd-button "pactl set-sink-mute 0 toggle")

  ;; `dat' on press and `pth' on release
  bth (cmd-button "date >> /tmp/kmonad_example.txt"
                  "echo $PATH > /tmp/kmonad_path.txt")
)
